UNIT 1 & 2 REVIEW
-----------------

1. Number Systems
-----------------

Make sure you can convert between the following number systems

Binary (base-2) <---> Decimal (base-10)
Binary (base-2) <---> Hexidecimal (base-16)
Hexidecimal (base-16) <---> Decimal (base-10)
base-? <----> Decimal (base-10)

Some example questions:

1. Convert 10110101 (bin) to Decimal and Hexidecimal
2. Convert 4E (hex) to Decimal and Binary
3. Convert 99 (dec) to Binary and Hexidecimal
4. Convert 1234 (base-5) to Decimal.
5. Convert 100 (dec) to base-5

2. Compilers & Interpreters
---------------------------

This is Chapter 2.1 - 2.3 in the textbook.

1. What is the difference between a compiled program and an interpreted program?

2. What are the main advantages and disadvantages of compilers and interpreters?

3. Using the terms Source Code, Compiler, JBC (Java Byte Code), JVM (Java Virtual Machine), and Machine Instructions, explain the steps in compiling and running a Java program.

4. Explain why Java Developers made Java both a compiled and interpreted language.

3. Java and Math
----------------

This is assignment 2.1, available from the class website.

1. What is a String?  An int?  A double?  A boolean?  How do you declare a variable?  How do you assign a variable a value?

2. Know how to use Scanner objects to read ints, doubles, and Strings from the terminal. 

3. What is the difference between the statements System.out.print() and System.out.println() ? 

4. How does Java evaluate Integer math?  Double math?  What happens when you assign doubles to int variables and vice versa?  For example, how does java evaluate:
a. 1 / 4
b. 4.0 / 2
c. 1.0 / 4.0
d. int x = 4.0 / 2
e. double x = 1 / 4

5. How do casting operators work?  For example, how do these evaluate?
a. int x = (int) 4.999;
b. double x = (int) 0.999;
c. int x = (double) 8;
d. int x = (int) 4.999 / (int) 2.5;
e. int x = (int) (4.5 / 0.9);

6. Know how to use common methods and variables from the Math class, including Math.abs(), Math.random(), Math.pow(), Math.sqrt(), and Math.PI.  Expect to recreate some basic math formula in Java code.  For example, how would you write the formula for solving for the hypotenuse (c) in the Pythagorean Theorem a^2 + b^2 = c^2?

4. Making Decisions
-------------------

This is assignment 2.2 and 2.3, available from the class website.

1. What is the difference between a series of if statements and a series of if-else statements?  For example, what is the result of the following code if a == 100? 

if (a > 90) 
	System.out.println("harder");
if (a > 60)
	System.out.println("faster");
if (a > 30)
	System.out.println("better");
if (a > 0)
	System.out.println("stronger");

How about this code if a == 100?

if (a > 90) 
	System.out.println("harder");
else if (a > 60)
	System.out.println("faster");
else if (a > 30)
	System.out.println("better");
else
	System.out.println("stronger");

2. Know how all the operators that we discussed work.  This includes, in order of operation:

(1) !, ++, --
(2) *, /, %
(3) +, -
(4) <, >, <=, >=
(5) ==, !=
(6) &&
(7) ||
(8) =, +=, -=, *=, /=

For example, is the following statement true or false when a == 1, b == 2, c == 3?

	a > 0 && b - a * c > 0 || c / a * c == a 

3. What is short circuit evaluation?  For example, why doesn't this program crash when x == 0?

if (x != 0 && 100 / x > 10) {
	// do stuff
}

4. Know how to read Nested If statements, especially the "dangling else" problems.  For example, for the following program, why does the program print "3 is not positive" when n == 3?  How could you fix this program so that it worked as intended?

int n = sc.nextInt();
if (n > 0)
	if (n % 2 == 0)
		System.out.println(n);
else
	System.out.println(n + " is not positive);

5.  Loops
---------

This is assignment 2.4, available from the class website.

You should know how for loops, while loops, and do-while loops work.  Be prepared to answer questions that require you to read through a loop or nested loop and determine the output at the end. 

Ex 1: What is the output after the execution of this code segment?

int x = 10; y = 0;
while (x > 5)
{
	y = 3;
	while (y < x)
	{
		y *= 2;
		if (y % x == 1)
			y += x;
	}
	x -= 3;
}
System.out.println(x + " " + y)


Another type of question is I give you an output and you write a program that produces that output.  

Ex 2: Using nested loops, write the method 'squarePattern' that takes an int parameter 's' and produces the specific square pattern shown below.  For example, squarePattern(4) would produce the following 4 x 4 pattern:

2 - - -
- 4 - -
- - 6 -
- - - 8

Whereas squarePattern(6) would produce the following 6 x 6 pattern:

2 - - - - -
- 4 - - - -
- - 6 - - -
- - - 8 - -
- - - - 10 -
- - - - - 12

To get you started, here is the method definition:

private void squarePattern(int s) {

}


Ex 3: Write the void method "triangle" that draws isosceles triangles that are h lines tall.  For example, the following traingle is the output of triangle(5) is

    *
   ***
  *****
 *******
*********

Where as the output of triangle(2) would be

 *
***

To get you started, here is the method defintion: 

private void triangle (int h) {

}