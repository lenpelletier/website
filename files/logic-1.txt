public boolean cigarParty(int cigars, boolean isWeekend) {
  if (cigars < 40)
    return false;
  
  if (isWeekend == false && cigars > 60 )
    return false;
  
  return true;
}



public int dateFashion(int you, int date) {
  if (you <= 2 || date <=2) {
    return 0;
  }
  else if (you >= 8 || date >= 8) {
    return 2;
  }
  else {
    return 1;
  }
}



public boolean squirrelPlay(int temp, boolean isSummer) {
  //example of handling exceptions first..
  
  if (temp < 60) {
    return false;
  }
    
  if (isSummer==true && temp > 100 || isSummer==false && temp > 90) {
    return false;
  }
  
  return true;
}



public int caughtSpeeding(int speed, boolean isBirthday) {
 
   if (isBirthday) {
     speed = speed - 5;
   }
 
   if (speed > 80) {
     return 2;
   }
   else if (speed > 60) {
     return 1;
   }
   else {
     return 0;
   }

}



public int sortaSum(int a, int b) {
  int sum = a + b;
  if (sum >= 10 && sum <= 19)
    return 20;
  else 
    return sum;
}



public String alarmClock(int day, boolean vacation) {
  if (day >= 1 && day <= 5) {
    if (vacation)
      return "10:00";
    else
      return "7:00";
  }
  else
  {
    if (vacation)
      return "off";
    else
      return "10:00";
  }
}



public boolean love6(int a, int b) {
  if (a == 6 || b == 6 || a + b == 6 || a - b == 6 || b - a == 6)
    return true;
  else
    return false;
}



public boolean in1To10(int n, boolean outsideMode) {
  if (n >= 1 && n <=10 && !outsideMode)
    return true;
  else if ( (n <=1 || n >=10) && outsideMode )
    return true;
  else
    return false;
}



public boolean specialEleven(int n) {
  if (n % 11 == 0 || n % 11 == 1){
    return true;
  } else {
    return false;
  }
}



public boolean more20(int n) {
  int remainder = n % 20;
  
  if ( remainder == 1 || remainder == 2) {
    return true;
  } else {
    return false;
  }
}



public boolean old35(int n) {
  if (n%3 == 0 && n%5 == 0) {
    return false;
  }
  
  if (n%3 == 0 || n%5 == 0) {
    return true;
  }
  
  return false;
}



public boolean less20(int n) {
  if (n%20 == 18 || n%20 == 19) {
    return true;
  } else {
    return false;
  }
}



public boolean nearTen(int num) {
  if (num % 10 <= 2 || num % 10 >= 8)
    return true;
  else
    return false;
}



public int teenSum(int a, int b) {
  if (a <= 19 && a >= 13 || b <= 19 && b >= 13)
    return 19;
  else
    return a+b;
}



public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
  if (isAsleep)
    return false;
  if (isMorning)
    if (isMom) 
      return true;
    else 
      return false;
  else
    return true;
  
}



public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
  if (isAsleep)
    return false;
  if (isMorning)
    if (isMom) 
      return true;
    else 
      return false;
  else
    return true;
  
}



public int teaParty(int tea, int candy) {
  if (tea < 5 || candy < 5)
    return 0;
  else if (tea >= candy*2 || candy >= tea*2)
    return 2;
  else 
    return 1;
  
}



public String fizzString(String str) {
  if (str.startsWith("f") && str.endsWith("b")) {
    return "FizzBuzz";
  }  
  
  if (str.startsWith("f")) {
    return "Fizz";
  }
  
  if (str.endsWith("b")) {
    return "Buzz";
  }
  
  return str;
}



public String fizzString2(int n) {
  
  if (n%3==0 && n%5==0) {
    return "FizzBuzz!";
  }
  
  if (n%3==0) {
    return "Fizz!";
  }
  
  if (n%5==0) {
    return "Buzz!";
  }
  
  return n+"!";
}



public boolean twoAsOne(int a, int b, int c) {
  if (a + b == c || b + c == a || a + c == b)
    return true;
  else 
    return false;
}



public boolean twoAsOne(int a, int b, int c) {
  if (a + b == c || b + c == a || a + c == b)
    return true;
  else 
    return false;
}



public boolean inOrder(int a, int b, int c, boolean bOk) {
  if (bOk)
    if (c > b)
      return true;
    else
      return false;
  else
    if (b > a && c > b)
      return true;
    else
      return false; 
}



public boolean lastDigit(int a, int b, int c) {
  int lastA = a % 10; //last digit of a
  int lastB = b % 10; //last digit of b
  int lastC = c % 10; //last digit of c
  
  if (lastA == lastB || lastB == lastC || lastA == lastC)
    return true;
  else
    return false;
}



public boolean lessBy10(int a, int b, int c) {
  if (a >= b+10 || a >= c+10)
    return true;
  else if (b >= a+10 || b >= c+10)
    return true;
  else if (c >= a+ 10 || c >= b+10)
    return true;
  else
    return false;
}



public int withoutDoubles(int die1, int die2, boolean noDoubles) {
  
  if (die1 == die2 && noDoubles)
    return (die1 % 6 + 1) + die2;
  else
    return die1 + die2;
}



public int maxMod5(int a, int b) {
  
  //calculate a and b % 5
  int aMod5 = a % 5;
  int bMod5 = b % 5;
  
  //choose larger value
  int larger = 0;
  int smaller = 0;
  if (a > b) {
    larger = a;
    smaller = b;
  } else {
    larger = b;
    smaller = a;
  }
  
  //run logic tests
  if (a == b) {
    return 0;
  }
  
  if (aMod5 == bMod5) {
    return smaller;
  }
  
  return larger;
}



public int redTicket(int a, int b, int c) {
  if (a == 2 && b == 2 && c == 2) {
    return 10;
  }
  
  if (a == b && a == c ) {
    return 5;
  }
  
  if (a != b && a != c) {
    return 1;
  }
  
  return 0;
}



public int greenTicket(int a, int b, int c) {
  if (a == b && a == c)
    return 20;
  
  if (a == b || a == c || c == b)
    return 10;
  
  return 0;
}



public int blueTicket(int a, int b, int c) {
  
  int ab = a + b;
  int bc = b + c;
  int ac = a + c;
  
  if (ab == 10 || bc == 10 || ac == 10) {
    return 10;
  }
  
  if (ab-10 == bc|| ab-10 == ac) {
    return 5;
  }
  
  return 0;
  
}



public boolean shareDigit(int a, int b) {
  int a1 = a/10;
  int a2 = a%10;
  int b1 = b/10;
  int b2 = b%10;
  
  if (a1 == b1 || a1 == b2 || a2 == b1 || a2 == b2) {
    return true;
  }
  else {
    return false;
  }
}



public int sumLimit(int a, int b) {
  
  int sum = a + b;
  String strsum = sum+"";
  String stra = a+"";
  if (strsum.length() > stra.length() ) {
    return a;
  } else {
    return sum;
  }
}



